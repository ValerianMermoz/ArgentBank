{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  id: \"\",\n  token: sessionStorage.getItem(\"token\") || localStorage.getItem(\"token\"),\n  isLogged: false\n};\nexport const loginSlice = createAsyncThunk(\"\", async (userData, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    const res = await axios.post(\"http://localhost:3001/api/v1/user/login\", {\n      email: userData.email,\n      password: userData.password\n    });\n    const state = getState();\n    if (state.auth.rememberUser === false) {\n      sessionStorage.setItem(\"token\", res.data.body.token);\n    } else {\n      localStorage.setItem(\"token\", res.data.body.token);\n    }\n    return res.data.body.token;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\n\n// // },\n\nexport const {\n  changeIsLogged,\n  loadUser,\n  logoutUser,\n  rememberUser\n} = loginSlice.actions;\nexport default loginSlice.reducer;\n\n// // name: 'login',\n// // initialState,\n// // reducers: {\n// //   changeIsLogged: (state) => {\n\n// //     state.isLogged = !state.isLogged\n// //   },\n// // },","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","id","token","sessionStorage","getItem","localStorage","isLogged","loginSlice","userData","rejectWithValue","getState","res","post","email","password","state","auth","rememberUser","setItem","data","body","err","response","changeIsLogged","loadUser","logoutUser","actions","reducer"],"sources":["C:/Users/valer/GitHub/ArgentBank-website-main/Front/src/slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  id: \"\",\r\n  token: sessionStorage.getItem(\"token\") || localStorage.getItem(\"token\"),\r\n  isLogged: false,\r\n};\r\n\r\nexport const loginSlice = createAsyncThunk(\r\n  \"\",\r\n  async (userData, { rejectWithValue, getState }) => {\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3001/api/v1/user/login\", {\r\n        email: userData.email,\r\n        password: userData.password,\r\n      });\r\n      const state = getState();\r\n\r\n      if (state.auth.rememberUser === false) {\r\n        sessionStorage.setItem(\"token\", res.data.body.token);\r\n      } else {\r\n        localStorage.setItem(\"token\", res.data.body.token);\r\n      }\r\n      return res.data.body.token;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.data);\r\n    }\r\n  }\r\n);\r\n\r\n  // // },\r\n\r\n\r\nexport const { changeIsLogged, loadUser, logoutUser, rememberUser } =\r\n  loginSlice.actions;\r\n\r\nexport default loginSlice.reducer;\r\n\r\n// // name: 'login',\r\n// // initialState,\r\n// // reducers: {\r\n// //   changeIsLogged: (state) => {\r\n\r\n// //     state.isLogged = !state.isLogged\r\n// //   },\r\n// // },\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,EAAE,EAAE,EAAE;EACNC,KAAK,EAAEC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,YAAY,CAACD,OAAO,CAAC,OAAO,CAAC;EACvEE,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGT,gBAAgB,CACxC,EAAE,EACF,OAAOU,QAAQ,EAAE;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EACjD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,yCAAyC,EAAE;MACtEC,KAAK,EAAEL,QAAQ,CAACK,KAAK;MACrBC,QAAQ,EAAEN,QAAQ,CAACM;IACrB,CAAC,CAAC;IACF,MAAMC,KAAK,GAAGL,QAAQ,CAAC,CAAC;IAExB,IAAIK,KAAK,CAACC,IAAI,CAACC,YAAY,KAAK,KAAK,EAAE;MACrCd,cAAc,CAACe,OAAO,CAAC,OAAO,EAAEP,GAAG,CAACQ,IAAI,CAACC,IAAI,CAAClB,KAAK,CAAC;IACtD,CAAC,MAAM;MACLG,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEP,GAAG,CAACQ,IAAI,CAACC,IAAI,CAAClB,KAAK,CAAC;IACpD;IACA,OAAOS,GAAG,CAACQ,IAAI,CAACC,IAAI,CAAClB,KAAK;EAC5B,CAAC,CAAC,OAAOmB,GAAG,EAAE;IACZ,OAAOZ,eAAe,CAACY,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC3C;AACF,CACF,CAAC;;AAEC;;AAGF,OAAO,MAAM;EAAEI,cAAc;EAAEC,QAAQ;EAAEC,UAAU;EAAER;AAAa,CAAC,GACjEV,UAAU,CAACmB,OAAO;AAEpB,eAAenB,UAAU,CAACoB,OAAO;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}