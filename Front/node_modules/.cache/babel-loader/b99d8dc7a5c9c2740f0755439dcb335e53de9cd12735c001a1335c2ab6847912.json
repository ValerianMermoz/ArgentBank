{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  id: \"\",\n  token: sessionStorage.getItem(\"token\") || localStorage.getItem(\"token\"),\n  isLogged: false\n};\nexport const loginSlice = createAsyncThunk(\"\", async (userData, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    const res = await axios.post(\"http://localhost:3001/api/v1/user/login\", {\n      email: userData.email,\n      password: userData.password\n    });\n    const state = getState();\n    if (state.auth.rememberUser === false) {\n      sessionStorage.setItem(\"token\", res.data.body.token);\n    } else {\n      localStorage.setItem(\"token\", res.data.body.token);\n    }\n    return res.data.body.token;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    //if token, decode token & return user data\n    loadUser(state) {\n      const token = state.token;\n      if (token) {\n        const user = jwtDecode(token);\n        return {\n          ...state,\n          token,\n          id: user.id,\n          userLoaded: true\n        };\n      } else return {\n        ...state,\n        userLoaded: false\n      };\n    },\n    //Reset all the data storage & the initial state\n    logoutUser(state) {\n      sessionStorage.clear();\n      localStorage.clear();\n      return {\n        ...state,\n        id: \"\",\n        token: \"\",\n        loginStatus: \"\",\n        loginError: \"\",\n        userLoaded: false,\n        rememberUser: false\n      };\n    },\n    //Add rememberUser on the current state\n    rememberUser(state, action) {\n      const token = state.token;\n      if (token) {\n        return {\n          ...state,\n          rememberUser: true\n        };\n      } else {\n        return {\n          ...state,\n          rememberUser: action.payload || false\n        };\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      return {\n        ...state,\n        loginStatus: \"pending\"\n      };\n    });\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          id: user.id,\n          token: action.payload,\n          loginStatus: \"Fulfilled\",\n          userLoaded: true\n        };\n      } else return state;\n    });\n    builder.addCase(loginUser.rejected, (state, action) => {\n      return {\n        ...state,\n        loginStatus: \"rejected\",\n        loginError: action.payload\n      };\n    });\n  }\n});\nexport const {\n  changeIsLogged,\n  loadUser,\n  logoutUser,\n  rememberUser\n} = authSlice.actions;\nexport default loginSlice.reducer;\n\n// // name: 'login',\n// // initialState,\n// // reducers: {\n// //   changeIsLogged: (state) => {\n\n// //     state.isLogged = !state.isLogged\n// //   },\n// // },","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","id","token","sessionStorage","getItem","localStorage","isLogged","loginSlice","userData","rejectWithValue","getState","res","post","email","password","state","auth","rememberUser","setItem","data","body","err","response","authSlice","name","reducers","loadUser","user","jwtDecode","userLoaded","logoutUser","clear","loginStatus","loginError","action","payload","extraReducers","builder","addCase","loginUser","pending","fulfilled","rejected","changeIsLogged","actions","reducer"],"sources":["C:/Users/valer/GitHub/ArgentBank-website-main/Front/src/slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  id: \"\",\r\n  token: sessionStorage.getItem(\"token\") || localStorage.getItem(\"token\"),\r\n  isLogged: false,\r\n};\r\n\r\nexport const loginSlice = createAsyncThunk(\r\n  \"\",\r\n  async (userData, { rejectWithValue, getState }) => {\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3001/api/v1/user/login\", {\r\n        email: userData.email,\r\n        password: userData.password,\r\n      });\r\n      const state = getState();\r\n\r\n      if (state.auth.rememberUser === false) {\r\n        sessionStorage.setItem(\"token\", res.data.body.token);\r\n      } else {\r\n        localStorage.setItem(\"token\", res.data.body.token);\r\n      }\r\n      return res.data.body.token;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    //if token, decode token & return user data\r\n    loadUser(state) {\r\n      const token = state.token;\r\n      if (token) {\r\n        const user = jwtDecode(token);\r\n        return {\r\n          ...state,\r\n          token,\r\n          id: user.id,\r\n          userLoaded: true,\r\n        };\r\n      } else return { ...state, userLoaded: false };\r\n    },\r\n    //Reset all the data storage & the initial state\r\n    logoutUser(state) {\r\n      sessionStorage.clear();\r\n      localStorage.clear();\r\n      return {\r\n        ...state,\r\n        id: \"\",\r\n        token: \"\",\r\n        loginStatus: \"\",\r\n        loginError: \"\",\r\n        userLoaded: false,\r\n        rememberUser: false,\r\n      };\r\n    },\r\n    //Add rememberUser on the current state\r\n    rememberUser(state, action) {\r\n      const token = state.token;\r\n      if (token) {\r\n        return {\r\n          ...state,\r\n          rememberUser: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          rememberUser: action.payload || false,\r\n        };\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(loginUser.pending, (state) => {\r\n      return { ...state, loginStatus: \"pending\" };\r\n    });\r\n    builder.addCase(loginUser.fulfilled, (state, action) => {\r\n      if (action.payload) {\r\n        const user = jwtDecode(action.payload);\r\n        return {\r\n          ...state,\r\n          id: user.id,\r\n          token: action.payload,\r\n          loginStatus: \"Fulfilled\",\r\n          userLoaded: true,\r\n        };\r\n      } else return state;\r\n    });\r\n    builder.addCase(loginUser.rejected, (state, action) => {\r\n      return {\r\n        ...state,\r\n        loginStatus: \"rejected\",\r\n        loginError: action.payload,\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const { changeIsLogged, loadUser, logoutUser, rememberUser } =\r\n  authSlice.actions;\r\n\r\nexport default loginSlice.reducer;\r\n\r\n// // name: 'login',\r\n// // initialState,\r\n// // reducers: {\r\n// //   changeIsLogged: (state) => {\r\n\r\n// //     state.isLogged = !state.isLogged\r\n// //   },\r\n// // },\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,EAAE,EAAE,EAAE;EACNC,KAAK,EAAEC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,YAAY,CAACD,OAAO,CAAC,OAAO,CAAC;EACvEE,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGT,gBAAgB,CACxC,EAAE,EACF,OAAOU,QAAQ,EAAE;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EACjD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,yCAAyC,EAAE;MACtEC,KAAK,EAAEL,QAAQ,CAACK,KAAK;MACrBC,QAAQ,EAAEN,QAAQ,CAACM;IACrB,CAAC,CAAC;IACF,MAAMC,KAAK,GAAGL,QAAQ,CAAC,CAAC;IAExB,IAAIK,KAAK,CAACC,IAAI,CAACC,YAAY,KAAK,KAAK,EAAE;MACrCd,cAAc,CAACe,OAAO,CAAC,OAAO,EAAEP,GAAG,CAACQ,IAAI,CAACC,IAAI,CAAClB,KAAK,CAAC;IACtD,CAAC,MAAM;MACLG,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEP,GAAG,CAACQ,IAAI,CAACC,IAAI,CAAClB,KAAK,CAAC;IACpD;IACA,OAAOS,GAAG,CAACQ,IAAI,CAACC,IAAI,CAAClB,KAAK;EAC5B,CAAC,CAAC,OAAOmB,GAAG,EAAE;IACZ,OAAOZ,eAAe,CAACY,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC3C;AACF,CACF,CAAC;AAED,OAAO,MAAMI,SAAS,GAAG1B,WAAW,CAAC;EACnC2B,IAAI,EAAE,MAAM;EACZxB,YAAY;EACZyB,QAAQ,EAAE;IACR;IACAC,QAAQA,CAACX,KAAK,EAAE;MACd,MAAMb,KAAK,GAAGa,KAAK,CAACb,KAAK;MACzB,IAAIA,KAAK,EAAE;QACT,MAAMyB,IAAI,GAAGC,SAAS,CAAC1B,KAAK,CAAC;QAC7B,OAAO;UACL,GAAGa,KAAK;UACRb,KAAK;UACLD,EAAE,EAAE0B,IAAI,CAAC1B,EAAE;UACX4B,UAAU,EAAE;QACd,CAAC;MACH,CAAC,MAAM,OAAO;QAAE,GAAGd,KAAK;QAAEc,UAAU,EAAE;MAAM,CAAC;IAC/C,CAAC;IACD;IACAC,UAAUA,CAACf,KAAK,EAAE;MAChBZ,cAAc,CAAC4B,KAAK,CAAC,CAAC;MACtB1B,YAAY,CAAC0B,KAAK,CAAC,CAAC;MACpB,OAAO;QACL,GAAGhB,KAAK;QACRd,EAAE,EAAE,EAAE;QACNC,KAAK,EAAE,EAAE;QACT8B,WAAW,EAAE,EAAE;QACfC,UAAU,EAAE,EAAE;QACdJ,UAAU,EAAE,KAAK;QACjBZ,YAAY,EAAE;MAChB,CAAC;IACH,CAAC;IACD;IACAA,YAAYA,CAACF,KAAK,EAAEmB,MAAM,EAAE;MAC1B,MAAMhC,KAAK,GAAGa,KAAK,CAACb,KAAK;MACzB,IAAIA,KAAK,EAAE;QACT,OAAO;UACL,GAAGa,KAAK;UACRE,YAAY,EAAE;QAChB,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,GAAGF,KAAK;UACRE,YAAY,EAAEiB,MAAM,CAACC,OAAO,IAAI;QAClC,CAAC;MACH;IACF;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACC,SAAS,CAACC,OAAO,EAAGzB,KAAK,IAAK;MAC5C,OAAO;QAAE,GAAGA,KAAK;QAAEiB,WAAW,EAAE;MAAU,CAAC;IAC7C,CAAC,CAAC;IACFK,OAAO,CAACC,OAAO,CAACC,SAAS,CAACE,SAAS,EAAE,CAAC1B,KAAK,EAAEmB,MAAM,KAAK;MACtD,IAAIA,MAAM,CAACC,OAAO,EAAE;QAClB,MAAMR,IAAI,GAAGC,SAAS,CAACM,MAAM,CAACC,OAAO,CAAC;QACtC,OAAO;UACL,GAAGpB,KAAK;UACRd,EAAE,EAAE0B,IAAI,CAAC1B,EAAE;UACXC,KAAK,EAAEgC,MAAM,CAACC,OAAO;UACrBH,WAAW,EAAE,WAAW;UACxBH,UAAU,EAAE;QACd,CAAC;MACH,CAAC,MAAM,OAAOd,KAAK;IACrB,CAAC,CAAC;IACFsB,OAAO,CAACC,OAAO,CAACC,SAAS,CAACG,QAAQ,EAAE,CAAC3B,KAAK,EAAEmB,MAAM,KAAK;MACrD,OAAO;QACL,GAAGnB,KAAK;QACRiB,WAAW,EAAE,UAAU;QACvBC,UAAU,EAAEC,MAAM,CAACC;MACrB,CAAC;IACH,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ,cAAc;EAAEjB,QAAQ;EAAEI,UAAU;EAAEb;AAAa,CAAC,GACjEM,SAAS,CAACqB,OAAO;AAEnB,eAAerC,UAAU,CAACsC,OAAO;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}