{"ast":null,"code":"export const getProfile = () => {\n  return async (dispatch, getState) => {\n    try {\n      const token = getState().token;\n      const response = await fetch('http://localhost:3001/api/v1/user/profile', {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'Authorization': 'Bearer ' + token.token\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const userProfile = data.body;\n        dispatch({\n          type: 'USER',\n          payload: {\n            email: userProfile.email,\n            firstName: userProfile.firstName,\n            id: userProfile.id,\n            lastName: userProfile.lastName,\n            userName: userProfile.userName\n          }\n        });\n      } else {\n        console.log(\"Erreur lors de la requete. Statut de réponse:\", response.status);\n      }\n    } catch (error) {\n      console.log(\"Erreur interne\");\n    }\n  };\n};","map":{"version":3,"names":["getProfile","dispatch","getState","token","response","fetch","method","headers","ok","data","json","userProfile","body","type","payload","email","firstName","id","lastName","userName","console","log","status","error"],"sources":["C:/Users/valer/GitHub/ArgentBank-website-main/Front/src/get.profil.js"],"sourcesContent":["export const getProfile = () => {\r\n    return async (dispatch, getState) => { \r\n        try {\r\n            const token = getState().token;\r\n            const response = await fetch('http://localhost:3001/api/v1/user/profile', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + token.token,\r\n                }\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                const userProfile = data.body;\r\n                dispatch({\r\n                    type: 'USER',\r\n                    payload: {\r\n                        email: userProfile.email,\r\n                        firstName: userProfile.firstName,\r\n                        id: userProfile.id,\r\n                        lastName: userProfile.lastName,\r\n                        userName: userProfile.userName,\r\n                    },\r\n                });\r\n            } else { console.log(\"Erreur lors de la requete. Statut de réponse:\", response.status);\r\n            }\r\n        } catch (error) { console.log(\"Erreur interne\");\r\n        }\r\n    };\r\n};"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjC,IAAI;MACA,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAACC,KAAK;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,eAAe,EAAE,SAAS,GAAGJ,KAAK,CAACA;QACvC;MACJ,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACI,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,MAAMC,WAAW,GAAGF,IAAI,CAACG,IAAI;QAC7BX,QAAQ,CAAC;UACLY,IAAI,EAAE,MAAM;UACZC,OAAO,EAAE;YACLC,KAAK,EAAEJ,WAAW,CAACI,KAAK;YACxBC,SAAS,EAAEL,WAAW,CAACK,SAAS;YAChCC,EAAE,EAAEN,WAAW,CAACM,EAAE;YAClBC,QAAQ,EAAEP,WAAW,CAACO,QAAQ;YAC9BC,QAAQ,EAAER,WAAW,CAACQ;UAC1B;QACJ,CAAC,CAAC;MACN,CAAC,MAAM;QAAEC,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEjB,QAAQ,CAACkB,MAAM,CAAC;MACtF;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAEH,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC/C;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}