{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { setMessage } from \"./message\";\nimport AuthService from \"./auth.service\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nexport const register = createAsyncThunk(\"auth/register\", async ({\n  username,\n  email,\n  password\n}, thunkAPI) => {\n  try {\n    const response = await AuthService.register(username, email, password);\n    thunkAPI.dispatch(setMessage(response.data.message));\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const login = createAsyncThunk(\"auth/login\", async ({\n  username,\n  password\n}, thunkAPI) => {\n  try {\n    const data = await AuthService.login(username, password);\n    return {\n      user: data\n    };\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await AuthService.logout();\n});\n\n// const initialState = user\n//   ? { isLoggedIn: true, user }\n//   : { isLoggedIn: false, user: null };\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [register.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [register.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [login.fulfilled]: (state, action) => {\n      state.isLoggedIn = true;\n      state.user = action.payload.user;\n    },\n    [login.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n      state.user = null;\n    },\n    [logout.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n      state.user = null;\n    }\n  }\n});\nconst {\n  reducer\n} = authSlice;\nexport default reducer;\n\n// const initialState = {\n//     isLogged: false,\n// }\n\n// export const loginSlice = createSlice({\n//   name: 'login',\n//   initialState,\n//   reducers: {\n//     changeIsLogged: (state) => {\n\n//       state.isLogged = !state.isLogged\n//     },\n//   },\n// })\n\n// export const { changeIsLogged } = loginSlice.actions\n\n// export default loginSlice.reducer","map":{"version":3,"names":["createSlice","createAsyncThunk","setMessage","AuthService","user","JSON","parse","localStorage","getItem","register","username","email","password","thunkAPI","response","dispatch","data","message","error","toString","rejectWithValue","login","logout","authSlice","name","initialState","extraReducers","fulfilled","state","action","isLoggedIn","rejected","payload","reducer"],"sources":["C:/Users/valer/GitHub/ArgentBank-website-main/Front/src/slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { setMessage } from \"./message\";\r\n\r\nimport AuthService from \"./auth.service\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async ({ username, email, password }, thunkAPI) => {\r\n    try {\r\n      const response = await AuthService.register(username, email, password);\r\n      thunkAPI.dispatch(setMessage(response.data.message));\r\n      return response.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      thunkAPI.dispatch(setMessage(message));\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const login = createAsyncThunk(\r\n  \"auth/login\",\r\n  async ({ username, password }, thunkAPI) => {\r\n    try {\r\n      const data = await AuthService.login(username, password);\r\n      return { user: data };\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      thunkAPI.dispatch(setMessage(message));\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\r\n  await AuthService.logout();\r\n});\r\n\r\n// const initialState = user\r\n//   ? { isLoggedIn: true, user }\r\n//   : { isLoggedIn: false, user: null };\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [register.fulfilled]: (state, action) => {\r\n      state.isLoggedIn = false;\r\n    },\r\n    [register.rejected]: (state, action) => {\r\n      state.isLoggedIn = false;\r\n    },\r\n    [login.fulfilled]: (state, action) => {\r\n      state.isLoggedIn = true;\r\n      state.user = action.payload.user;\r\n    },\r\n    [login.rejected]: (state, action) => {\r\n      state.isLoggedIn = false;\r\n      state.user = null;\r\n    },\r\n    [logout.fulfilled]: (state, action) => {\r\n      state.isLoggedIn = false;\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nconst { reducer } = authSlice;\r\nexport default reducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const initialState = {\r\n//     isLogged: false,\r\n// }\r\n\r\n// export const loginSlice = createSlice({\r\n//   name: 'login',\r\n//   initialState,\r\n//   reducers: {\r\n//     changeIsLogged: (state) => {\r\n\r\n//       state.isLogged = !state.isLogged\r\n//     },\r\n//   },\r\n// })\r\n\r\n\r\n// export const { changeIsLogged } = loginSlice.actions\r\n\r\n// export default loginSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}